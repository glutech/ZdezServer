package cn.com.zdez.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import cn.com.zdez.dao.ConnectionFactory;
import cn.com.zdez.dao.StudentDao;
import cn.com.zdez.po.SchoolAdmin;
import cn.com.zdez.po.Student;
import cn.com.zdez.vo.StudentVo;

public class StudentService {
	
	StudentDao dao = new StudentDao();
	
//	/**
//	 * 教师所属部门属于一个特殊专业，可以通过专业id获取该部门下的教师
//	 * @param majorId
//	 * @return list of teachers(student entity)
//	 */
//	public List<Student> getTeacherList(int majorId) {
//		return dao.getTeacherList(majorId);
//	}
	
	/**
	 * 通过学生用户名获取学生详细信息
	 * @param username
	 * @return student entity
	 */
	public Student getStudentById(int stuId) {
		return dao.getStudentById(stuId);
	}
	
	/**
	 * 通过学生idList获得学生信息
	 * @param stuIdList
	 * @return
	 */
	public List<Student> getStudentByIdList(List<Integer> stuIdList) {
		return dao.getStudentByIdList(stuIdList);
	}
	
	/**
	 * 获取对应专业和年级之下的所有学生
	 * @param gradeId
	 * @param majorId
	 * @return list of students' id
	 */
	public List<Integer> getStudentByGradeMajor(String[] gradeId, String[] majorId) {
		return dao.getStudentByGradeMajor(gradeId, majorId);
	}
	
	/**
	 * 获取对应专业年级和性别之下的所有学生
	 * 
	 * @param gradeId
	 * @param majorId
	 * @return
	 */
	public List<Integer> getStudentByGradeMajor(String[] gradeId, String[] majorId, String[] gender) {
		return dao.getStudentByGradeMajor(gradeId, majorId, gender);
	}
	
	/**
	 * 获取学生数，用于分页
	 * @return
	 */
	public int getStudentCount() {
		return dao.getStudentCount();
	}
	
	/**
	 * 通过页码获取要显示的学生信息
	 * @param start
	 * @param end
	 * @return
	 */
	public List<StudentVo> getStudentByPage(int start, int end) {
		return dao.getStudentByPage(start, end);
	}
	
	/**
	 * 通过学生用户名获取学生的详细信息
	 * @param username
	 * @return
	 */
	public StudentVo getStudentVoByUsername(String username) {
		return dao.getStudentVoByUsername(username);
	}
	
	/**
	 * 根据关键字，获取符合条件的学生记录的数量，学生管理中查询时使用
	 * ---目前只能查询用户名，需要进一步加强---
	 * @param keyword
	 * @return
	 */
	public int getStudentQueryCount(String keyword) {
		return dao.getStudentQueryCount(keyword);
	}
	
	/**
	 * 通过页码和查询的关键字获取要显示的学生信息
	 * 
	 * @param start
	 * @param end
	 * @return
	 */
	public List<StudentVo> getStudentByPage(int start, int end, String keyword) {
		return dao.getStudentByPage(start, end, keyword);
	}
	
	/**
	 * 根据学生id删除学生
	 * @param stuId
	 * @return
	 */
	public boolean deleteStudent(int stuId) {
		return dao.deleteStudent(stuId);
	}
	
	/**
	 * 根据用户id修改staus字段，给WP使用
	 * @param stuId
	 * @param staus
	 * @return
	 */
	public boolean modifyStaus(int stuId, String staus) {
		return dao.modifyStaus(stuId, staus);
	}
	
	/**
	 * 用户从客户端修改密码
	 * @param stuId
	 * @param newPassword
	 * @return
	 */
	public boolean modifyPassword(int stuId, String newPassword) {
		return dao.modifyPassword(stuId, newPassword);
	}
	
	/**
	 * 修改学生信息
	 * @param stu
	 * @return
	 */
	public boolean modifyStudentInfo(Student stu) {
		return dao.modifyStudentInfo(stu);
	}
	
	/**
	 * 获取所有学生的id
	 * @return
	 */
	public List<Integer> getAllStuId() {
		List<Integer> list = new ArrayList<Integer>();
		List<Student> stuList = dao.getAll();
		for(Student s : stuList) {
			list.add(s.getId());
		}
		return list;
	}
}
